{"version":3,"sources":["poke/Header.jsx","poke/Pagination.jsx","poke/Pokecard.jsx","poke/Pokemon.jsx","poke/Index.jsx","App.js","index.js"],"names":["Header","props","search","onInputSearch","className","type","placeholder","value","onChange","Pagination","showPerPageove","onPaginationChange","movesCount","useState","counter","setCounter","useEffect","onButtonClick","Math","ceil","onClick","Pokecard","getpoke","image","setImage","name","setName","moves","setMoves","id","setId","moveName","setMoveName","singleapiurl","a","Axios","get","res","data","sprites","other","dream_world","front_default","length","setShowPerPageove","start","end","pagination","setPegination","moveDistan","setMoveDistan","src","alt","slice","map","item","index","move","Pokemon","pokemon","setPokecount","poke","url","Index","setSearch","pokecount","setPokemon","getPokemon","results","e","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAwBeA,EAvBA,SAACC,GAAW,IAChBC,EAAwBD,EAAxBC,OAAOC,EAAiBF,EAAjBE,cAEhB,OACE,mCACE,sBAAKC,UAAU,aAAf,UACE,oBAAIA,UAAU,qCAAd,qBACA,sBAAKA,UAAU,0BAAf,UACE,uBACEC,KAAK,OACLD,UAAU,wBACVE,YAAY,2BACZC,MAAOL,EACPM,SAAUL,IAEZ,qBAAKC,UAAU,8BAAf,SACE,wBAAQA,UAAU,mBAAlB,uCCgCGK,EA/CI,SAACR,GAAW,IACrBS,EAAmDT,EAAnDS,eAAgBC,EAAmCV,EAAnCU,mBAAoBC,EAAeX,EAAfW,WADhB,EAEEC,mBAAS,GAFX,mBAErBC,EAFqB,KAEZC,EAFY,KAG5BC,qBAAU,WACR,IAAMT,EAAQG,EAAiBI,EAC/BH,EAAmBJ,EAAQG,EAAgBH,KAE1C,CAACO,IACJ,IAAMG,EAAgB,SAACZ,GACR,QAATA,EAEAU,EADc,IAAZD,EACS,EAEAA,EAAU,GAEL,SAATT,IACLa,KAAKC,KAAKP,EAAaF,KAAoBI,EAC7CC,EAAWD,GAEXC,EAAWD,EAAU,KAI3B,OACE,mCACE,qBAAIV,UAAU,yDAAd,UACE,oBAAIA,UAAU,aAAd,SACE,wBACEA,UAAU,4BACVgB,QAAS,kBAAMH,EAAc,QAF/B,wBAOF,oBAAIb,UAAU,aAAd,SACE,wBACEA,UAAU,4BACVgB,QAAS,kBAAMH,EAAc,SAF/B,0BCsDKI,EAvFE,SAACpB,GAChBe,qBAAU,WACRM,MAEC,IAJuB,MAKAT,qBALA,mBAKnBU,EALmB,KAKZC,EALY,OAMFX,qBANE,mBAMnBY,EANmB,KAMbC,EANa,OAOAb,qBAPA,mBAOnBc,EAPmB,KAOZC,EAPY,OAQNf,mBAAS,GARH,mBAQnBgB,EARmB,KAQfC,EARe,OASMjB,mBAAS,IATf,mBASnBkB,EATmB,KASTC,EATS,KAUlBC,EAAiBhC,EAAjBgC,aAEFX,EAAO,uCAAG,4BAAAY,EAAA,sEACIC,IAAMC,IAAIH,GADd,OACRI,EADQ,OAGdb,EAASa,EAAIC,KAAKC,QAAQC,MAAMC,YAAYC,eAC5ChB,EAAQW,EAAIC,KAAKb,MACjBG,EAASS,EAAIC,KAAKX,MAAMgB,QACxBb,EAAMO,EAAIC,KAAKT,IACfG,EAAYK,EAAIC,KAAKX,OAPP,2CAAH,qDAZa,EAqBkBd,mBAAS,GArB3B,mBAqBnBH,EArBmB,KAqBHkC,EArBG,OAsBU/B,mBAAS,CAC3CgC,MAAO,EACPC,IAAKpC,IAxBmB,mBAsBnBqC,EAtBmB,KAsBPC,EAtBO,OAqCUnC,mBAAS,CAC3CgC,MAAOE,EAAWF,MAAQ,EAC1BC,IAAKC,EAAWD,MAvCQ,mBAqCnBG,EArCmB,KAqCPC,EArCO,KAyC1B,OACE,mCACE,qBAAK9C,UAAU,iBAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAK+C,IAAK5B,EAAOnB,UAAU,uBAAuBgD,IAAK3B,IACvD,qBAAIrB,UAAU,8BAAd,UACE,oBAAIA,UAAU,yBAAd,SACE,qBAAIA,UAAU,8CAAd,kBACQyB,OAGV,oBAAIzB,UAAU,yBAAd,SACE,qBAAIA,UAAU,8CAAd,oBACUqB,OAGZ,oBAAIrB,UAAU,yBAAd,SACE,qBAAIA,UAAU,4CAAd,qBACWuB,OAGb,oBAAIvB,UAAU,yBAAd,SACE,qBAAIA,UAAU,4CAAd,qBACW6C,EAAWJ,MADtB,OACiCI,EAAWH,SAG9C,cAAC,EAAD,CACEpC,eAAgBA,EAChBC,mBA3Ce,SAACkC,EAAOC,GACjCE,EAAc,CACZH,MAAOA,EACPC,IAAKA,IAEPI,EAAc,CACZL,MAAOA,EAAQ,EACfC,IAAKA,IAEPF,EAAkBlC,IAmCRE,WAAYe,IAEbI,EACEsB,MAAMN,EAAWF,MAAOE,EAAWD,KACnCQ,KAAI,SAACC,EAAMC,GACV,OACE,qBAAIpD,UAAU,yBAAd,UACG2C,EAAWF,SAAUW,EADxB,MACkCD,EAAKE,KAAKhC,OADA+B,iBCzC/CE,EAnCC,SAACzD,GAAW,IAClB0D,EAA0B1D,EAA1B0D,QAASC,EAAiB3D,EAAjB2D,aADQ,EAGmB/C,mBAAS,IAH5B,mBAGlBH,EAHkB,KAGFkC,EAHE,OAIW/B,mBAAS,CAC3CgC,MAAO,EACPC,IAAKpC,IANkB,mBAIlBqC,EAJkB,KAINC,EAJM,KAQnBrC,EAAqB,SAACkC,EAAOC,GACjCE,EAAc,CACZH,MAAOA,EACPC,IAAKA,IAEPF,EAAkBlC,IAEpB,OACE,qCACE,cAAC,EAAD,CACEA,eAAgBA,EAChBC,mBAAoBA,EACpBC,WAAYgD,IAEd,qBAAKxD,UAAU,4BAAf,SACGuD,EAAQN,MAAMN,EAAWF,MAAOE,EAAWD,KAAKQ,KAAI,SAACO,EAAML,GAC1D,OAAO,cAAC,EAAD,CAAUvB,aAAc4B,EAAKC,KAAUD,EAAKpC,WAGvD,cAAC,EAAD,CACEf,eAAgBA,EAChBC,mBAAoBA,EACpBC,WAAYgD,QCNLG,EAvBD,WAAO,IAAD,EACUlD,mBAAS,IADnB,mBACXX,EADW,KACH8D,EADG,OAEgBnD,mBAAS,IAFzB,mBAEXoD,EAFW,KAEAL,EAFA,OAGY/C,mBAAS,IAHrB,mBAGX8C,EAHW,KAGFO,EAHE,KAOlBlD,qBAAU,WACRmD,MACC,IAEH,IAAMA,EAAU,uCAAG,4BAAAjC,EAAA,sEACCC,IAAMC,IAAN,gDADD,OACXC,EADW,OAEjBuB,EAAavB,EAAIC,KAAK8B,QAAQzB,QAC9BuB,EAAW7B,EAAIC,KAAK8B,SAHH,2CAAH,qDAKhB,OACE,qCACE,cAAC,EAAD,CAAQlE,OAAQA,EAAQC,cAdN,SAACkE,GACrBL,EAAUK,EAAEC,OAAO/D,UAcjB,cAAC,EAAD,CAASoD,QAASA,EAASM,UAAWA,Q,MChB7BM,MAJf,WACE,OAAO,cAAC,EAAD,KCATC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8c5e3e44.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Header = (props) => {\r\n    const {search,onInputSearch} = props;\r\n    // https://pokeapi.co/api/v2/pokemon?limit=1050\r\n  return (\r\n    <>\r\n      <div className=\"jumbotron \">\r\n        <h1 className=\"display-1 mx-auto mb-5 pokeheading\">Pokemon</h1>\r\n        <div className=\"input-group w60 mx-auto\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control w30 mt-2\"\r\n            placeholder=\"Search Favourite Pokemon\"\r\n            value={search}\r\n            onChange={onInputSearch}\r\n          />\r\n          <div className=\"input-group-append w20 mt-2\">\r\n            <button className=\"btn btn-dark f20\">Search Pokemon</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Pagination = (props) => {\r\n  const { showPerPageove, onPaginationChange, movesCount } = props;\r\n  const [counter, setCounter] = useState(1);\r\n  useEffect(() => {\r\n    const value = showPerPageove * counter;\r\n    onPaginationChange(value - showPerPageove, value);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [counter]);\r\n  const onButtonClick = (type) => {\r\n    if (type === \"pre\") {\r\n      if (counter === 1) {\r\n        setCounter(1);\r\n      } else {\r\n        setCounter(counter - 1);\r\n      }\r\n    } else if (type === \"next\") {\r\n      if (Math.ceil(movesCount / showPerPageove) === counter) {\r\n        setCounter(counter);\r\n      } else {\r\n        setCounter(counter + 1);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <ul className=\"pagination pagination-lg d-flex justify-content-around\">\r\n        <li className=\"page-item \">\r\n          <button\r\n            className=\"page-link btn lifont my-1\"\r\n            onClick={() => onButtonClick(\"pre\")}\r\n          >\r\n            Previous\r\n          </button>\r\n        </li>\r\n        <li className=\"page-item \">\r\n          <button\r\n            className=\"page-link btn lifont my-1\"\r\n            onClick={() => onButtonClick(\"next\")}\r\n          >\r\n            Next\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst Pokecard = (props) => {\r\n  useEffect(() => {\r\n    getpoke();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const [image, setImage] = useState();\r\n  const [name, setName] = useState();\r\n  const [moves, setMoves] = useState();\r\n  const [id, setId] = useState(0);\r\n  const [moveName, setMoveName] = useState([]);\r\n  const { singleapiurl } = props;\r\n\r\n  const getpoke = async () => {\r\n    const res = await Axios.get(singleapiurl);\r\n    // console.log(res);\r\n    setImage(res.data.sprites.other.dream_world.front_default);\r\n    setName(res.data.name);\r\n    setMoves(res.data.moves.length);\r\n    setId(res.data.id);\r\n    setMoveName(res.data.moves);\r\n  };\r\n  const [showPerPageove, setShowPerPageove] = useState(4);\r\n  const [pagination, setPegination] = useState({\r\n    start: 0,\r\n    end: showPerPageove,\r\n  });\r\n  const onPaginationChange = (start, end) => {\r\n    setPegination({\r\n      start: start,\r\n      end: end,\r\n    });\r\n    setMoveDistan({\r\n      start: start + 1,\r\n      end: end,\r\n    });\r\n    setShowPerPageove(showPerPageove);\r\n  };\r\n  const [moveDistan, setMoveDistan] = useState({\r\n    start: pagination.start + 1,\r\n    end: pagination.end,\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"col-md-4 mb-5 \">\r\n        <div className=\"card card-shadow\">\r\n          <img src={image} className=\"img-thumbnail imgcss\" alt={name} />\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item lifont\">\r\n              <h4 className=\" text-center mt-1 text-capitalize namepoke \">\r\n                Id : {id}\r\n              </h4>\r\n            </li>\r\n            <li className=\"list-group-item lifont\">\r\n              <h4 className=\" text-center mt-1 text-capitalize namepoke \">\r\n                Name : {name}\r\n              </h4>\r\n            </li>\r\n            <li className=\"list-group-item lifont\">\r\n              <h4 className=\"text-center mt-1 text-capitalize namepoke\">\r\n                Moves : {moves}\r\n              </h4>\r\n            </li>\r\n            <li className=\"list-group-item lifont\">\r\n              <h4 className=\"text-center mt-1 text-capitalize namepoke\">\r\n                Moves : {moveDistan.start} To {moveDistan.end}\r\n              </h4>\r\n            </li>\r\n            <Pagination\r\n              showPerPageove={showPerPageove}\r\n              onPaginationChange={onPaginationChange}\r\n              movesCount={moves}\r\n            />\r\n            {moveName\r\n              .slice(pagination.start, pagination.end)\r\n              .map((item, index) => {\r\n                return (\r\n                  <li className=\"list-group-item lifont\" key={index}>\r\n                    {pagination.start + ++index} : {item.move.name}\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Pokecard;\r\n","import React, { useState } from \"react\";\r\nimport Pagination from \"./Pagination\";\r\nimport Pokecard from \"./Pokecard\";\r\n// import Pokecard from \"./Pokecard\";\r\nconst Pokemon = (props) => {\r\n  const { pokemon, setPokecount } = props;\r\n  // console.log(pokemon);\r\n  const [showPerPageove, setShowPerPageove] = useState(30);\r\n  const [pagination, setPegination] = useState({\r\n    start: 0,\r\n    end: showPerPageove,\r\n  });\r\n  const onPaginationChange = (start, end) => {\r\n    setPegination({\r\n      start: start,\r\n      end: end,\r\n    });\r\n    setShowPerPageove(showPerPageove);\r\n  };\r\n  return (\r\n    <>\r\n      <Pagination\r\n        showPerPageove={showPerPageove}\r\n        onPaginationChange={onPaginationChange}\r\n        movesCount={setPokecount}\r\n      />\r\n      <div className=\"container row mx-auto bg2\">\r\n        {pokemon.slice(pagination.start, pagination.end).map((poke, index) => {\r\n          return <Pokecard singleapiurl={poke.url} key={poke.name} />;\r\n        })}\r\n      </div>\r\n      <Pagination\r\n        showPerPageove={showPerPageove}\r\n        onPaginationChange={onPaginationChange}\r\n        movesCount={setPokecount}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default Pokemon;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from \"./Header\";\r\nimport Pokemon from \"./Pokemon\";\r\n\r\nconst Index = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [pokecount, setPokecount] = useState(\"\");\r\n  const [pokemon, setPokemon] = useState([]);\r\n  const onInputSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    getPokemon();\r\n  }, []);\r\n\r\n  const getPokemon = async () => {\r\n    const res = await Axios.get(`https://pokeapi.co/api/v2/pokemon?limit=1050`);\r\n    setPokecount(res.data.results.length);\r\n    setPokemon(res.data.results);\r\n  };\r\n  return (\r\n    <>\r\n      <Header search={search} onInputSearch={onInputSearch} />\r\n      <Pokemon pokemon={pokemon} pokecount={pokecount} />\r\n    </>\r\n  );\r\n};\r\nexport default Index;\r\n","import React from \"react\";\nimport Index from \"./poke/Index\";\nimport \"./App.css\";\n\nfunction App() {\n  return <Index />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}